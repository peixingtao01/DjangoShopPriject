"""
Django settings for ShopFresh project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't-$pk1^)w9sx)f=&p(xaan5#=ab%+i*z!&9yy^!p6lm-w_&bpg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ShopFresh1',
    'Buyer',
    'ckeditor',
    'ckeditor_uploader',
    'rest_framework',
    'djcelery',#芹菜
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ShopFresh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ShopFresh.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)

MEDIA_URL = '/media/'#媒体文件
MEDIA_ROOT = os.path.join(BASE_DIR,'static')

CKEDITOR_UPLOAD_PATH = 'static/upload'
CKEDITOR_IMAGE_BACKEND = 'pillow'
# STATIC_ROOT = os.path.join(BASE_DIR,'static')

# 这是api的东西
REST_FRAMEWORK ={
    "DEFAULT_PERMISSION_CLASSES":[
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],#权限
#     分页装置
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE':1,
    # 重新搞一下接口,自定义返回内容
    "DEFAULT_RENDERER_CLASSES":(
        'utils.rendererresponse.customrenderer',
    ),

    # django-filter自带的查询过滤器
    'DEFAULT_FILTER_BACKENDS':(
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
}

# 邮件服务器
EMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = '13906445972@163.com'
EMAIL_HOST_PASSWORD = 'duoyan3wei'
DEFAULT_FROM_EMAIL = '13906445972@163.com'


# 配置celery,芹菜
import djcelery #导入包
djcelery.setup_loader()
BROKER_URL = 'redis://127.0.0.1:6379/1'#放入数据库中
CELERY_IMPORTS = ('CeleryTask.tasks')#具体的任务文件
CELERY_TIMEZONE = 'Asia/Shanghai'#东八区
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'#celery处理器

# celery定时器
from celery.schedules import crontab
from celery.schedules import timedelta

CELERYBEAT_SCHEDULE ={
    #定时器策略
    u'测试定时器1':{
        'task':'celeryTask.tasks.taskExample',
        'schedule':timedelta(seconds=30),
        'args':(),
    },
}
# 使用celery与Redis，必须先启动Redis